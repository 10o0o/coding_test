#include <bits/stdc++.h>
using namespace std;

#define FASTIO                 \
  ios::sync_with_stdio(false); \
  cin.tie(nullptr);            \
  cout.tie(nullptr);

#define FOR(i, a, b) for (int i = a; i < b; i += 1)
#define FRE(i, b, a) for (int i = b; i >= a; i -= 1)
#define FOF(it, vec) for (auto& it : vec)
#define endl '\n'
#define ALL(v) v.begin(), v.end()
#define DEBUG_VAR(var) cout << #var << ": " << (var) << endl;
// #define DEBUG

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef tuple<int, int, int> tiii;

int dp[1'000'000][26][2];

int main() {
  FASTIO;
  int N, K;
  string S;
  cin >> N >> K >> S;
  K = min(K, 25);
  vector<int> prevs(26, -1);
  vector<int> nexts(N, -1);
  FOR(i, 0, N) {
    if (S[i] == 'X') continue;
    int charInt = S[i] - 'A';
    if (prevs[charInt] != -1) nexts[prevs[charInt]] = i;
    prevs[charInt] = i;
  }

  // vector<vector<vector<int>>> dp(N + 1, vector<vector<int>>(K + 1, vector<int>(2, 0)));

  FOR(i, 0, N) {
    FOR(j, 0, K + 1) { dp[i + 1][j][0] = max({dp[i + 1][j][0], dp[i][j][0], dp[i][j][1]}); }

    int next = nexts[i];
    if (next == -1) continue;
    FOR(j, 0, K) {
      dp[next][j + 1][1] =
          max({dp[next][j + 1][1], dp[i][j][0] + next - i + 1, dp[i][j + 1][1] + next - i});
    }
  }

  cout << N - max(dp[N - 1][K][0], dp[N - 1][K][1]);

  return 0;
}